/*******************************************************************************

	Title : _mixins.scss
	Author : David Leclerc
	Date : 12.12.2016
	Notes : -

*******************************************************************************/

// GENERAL MIXINS

// =============================================================================
// MQ
// =============================================================================

@mixin mq($type) {
	
	@media only screen and (max-width: map-get($breakpoints, $type)) {
		@content;
	}
}

// =============================================================================
// SIZE
// =============================================================================

@mixin size($width: null, $height: null,
			$tablet-width: null, $tablet-height: null,
			$phone-width: null, $phone-height: null) {
	width: $width;
	height: $height;

	@include mq(tablet) {
		width: $tablet-width;
		height: $tablet-height;
	}

	@include mq(phone) {
		width: $phone-width;
		height: $phone-height;
	}
}

// =============================================================================
// POSITION
// =============================================================================

@mixin position($position,
				$top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin absolute($args...) {
	@include position(absolute, $args...);
}

@mixin relative($args...) {
	@include position(relative, $args...);
}

@mixin fixed($args...) {
	@include position(fixed, $args...);
}

// =============================================================================
// FONT
// =============================================================================

@mixin font($font) {
	// Get font from config file
	$font: map-get($fonts, $font);

	// Set font-family
	@if map-has-key($font, family) {
		font-family: map-get($font, family);
	}

	// Set font-size
	@if map-has-key($font, size) {
		$size: map-get($font, size);

		// Deal with MQ
		@if type-of($size) == "map" {

			@if map-has-key($size, desktop) {
				font-size: map-get($size, desktop)
			}

			@if map-has-key($size, tablet) {
				@include mq(tablet) {
					font-size: map-get($size, tablet)
				}
			}

			@if map-has-key($size, phone) {
				@include mq(phone) {
					font-size: map-get($size, phone)
				}
			}
		}

		@else {
			font-size: $size;
		}
	}

	// Set font-weight
	@if map-has-key($font, weight) {
		$weight: map-get($font, weight);

		// Deal with MQ
		@if type-of($weight) == "map" {

			@if map-has-key($weight, desktop) {
				font-weight: map-get($weight, desktop)
			}

			@if map-has-key($weight, tablet) {
				@include mq(tablet) {
					font-weight: map-get($weight, tablet)
				}
			}

			@if map-has-key($weight, phone) {
				@include mq(phone) {
					font-weight: map-get($weight, phone)
				}
			}
		}

		@else {
			font-weight: $weight;
		}
	}

	// Set line-height
	@if map-has-key($font, line-height) {
		$line-height: map-get($font, line-height);

		// Deal with MQ
		@if type-of($line-height) == "map" {

			@if map-has-key($line-height, desktop) {
				line-height: map-get($line-height, desktop)
			}

			@if map-has-key($line-height, tablet) {
				@include mq(tablet) {
					line-height: map-get($line-height, tablet)
				}
			}

			@if map-has-key($line-height, phone) {
				@include mq(phone) {
					line-height: map-get($line-height, phone)
				}
			}
		}
		@else {
			line-height: $line-height;
		}
	}

	// Set color
	@if map-has-key($font, color) {
		color: map-get($font, color);
	}
}



// CUSTOM MIXINS

// =============================================================================
// BOX
// =============================================================================

@mixin box($color) {
	display: flex;
	flex: none;
	border: none;
	border-radius: $border-radius;
	background-color: $color;
	box-shadow: $shadow-radius $shadow-radius $shadow-radius $black-trans;
}



// GRAPH MIXINS

// =============================================================================
// GRAPH
// =============================================================================

@mixin graph($w, $h) {
	display: flex;
	flex-wrap: wrap;

	.graph-x-axis {
		display: flex;
		flex-direction: row;
		width: calc(100% - #{$w});
		height: $h;
		order: 3;

		> .graph-x-axis-tick {
			@extend %graph-x-axis-tick;
		}
	}

	.graph-y-axis {
		display: flex;
		flex-direction: column-reverse;
		width: $w;
		height: calc(100% - #{$h});
		order: 2;

		> .graph-y-axis-tick {
			@extend %graph-y-axis-tick;
		}
	}

	.graph {
		width: calc(100% - #{$w});
		height: calc(100% - #{$h});
		order: 1;
		@include relative;

		// Use flexbox to ensure no horizontal gaps between bars due to rounding
		// errors
		display: flex;
		justify-content: flex-end;
		align-items: flex-end;

		> .BG {
			@include dot;
		}

		> .TB {
			@include bar(TB, $purple, 3%);
		}

		> .B {
			@include square($blue, 20%);
		}
	}

	.graph-NA {
		width: $w;
		height: $h;
		order: 4;
	}
}

// =============================================================================
// DOT
// =============================================================================

@mixin dot($color: null, $degree: null) {
	@include absolute;
	@include size(2 * $radius-dot, 2 * $radius-dot,
		2 * $tablet-radius-dot, 2 * $tablet-radius-dot,
		2 * $phone-radius-dot, 2 * $phone-radius-dot)
	border: $border-radius-dot solid $black;
	border-radius: 50%;
	background-color: $color;
	cursor: pointer;
	z-index: 10;

	@if $degree {
		&:hover {
			background-color: darken($color, $degree);
		}
	}

	@include mq("tablet") {
		border-size: $tablet-border-radius-dot;
	}

	@include mq("phone") {
		border-size: $phone-border-radius-dot;
	}
}

// =============================================================================
// SQUARE
// =============================================================================

@mixin square($color: null, $degree: null) {
	@include dot($color, $degree);
	border-radius: 0;
}

// =============================================================================
// BAR
// =============================================================================

@mixin bar($bar, $color: null, $degree: null) {
	display: flex;
	flex: none;
	overflow: hidden;
	border-top: $border-bar;
	border-bottom: $border-bar;
	background-color: $color;
	cursor: pointer;
	z-index: 5;

	@if $degree {
		&:hover {
			background-color: darken($color, $degree);
		}
	}

	&.first-#{$bar} {

	}

	&.last-#{$bar} {

	}

	> .inner-#{$bar} {
		width: 50%;

		&:first-child {
			border-left: $border-bar;
			margin-right: auto;
		}

		&:last-child {
			border-right: $border-bar;
			margin-left: auto;
		}
	}
}